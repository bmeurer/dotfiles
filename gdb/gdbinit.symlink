# .gdbinit - GDB configuration file
#
# Copyright 2014 Benedikt Meurer
# Copyright 2012 Daniel Clifford
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Print HeapObjects.
define job
print ((v8::internal::HeapObject*)($arg0))->Print()
end
document job
Print a v8 JavaScript object
Usage: job tagged_ptr
end

# Print Code objects containing given PC.
define jco
job (v8::internal::Isolate::Current()->FindCodeObject((v8::internal::Address)$arg0))
end
document jco
Print a v8 Code object from an internal code address
Usage: jco pc
end

# Print TypeFeedbackVector
define jfv
print ((v8::internal::TypeFeedbackVector*)($arg0))->Print()
end
document jfv
Print a v8 TypeFeedbackVector object
Usage: jtv tagged_ptr
end

# Print DescriptorArray.
define jda
print ((v8::internal::DescriptorArray*)($arg0))->Print()
end
document jda
Print a v8 DescriptorArray object
Usage: jda tagged_ptr
end

# Print TransitionArray.
define jta
print ((v8::internal::TransitionArray*)($arg0))->Print()
end
document jta
Print a v8 TransitionArray object
Usage: jta tagged_ptr
end

# Print JavaScript stack trace.
define jst
print v8::internal::Isolate::Current()->PrintStack((FILE*) stdout, 1)
end
document jst
Print the current JavaScript stack trace
Usage: jst
end

# We use Intel syntax for the assembly.
set disassembly-flavor intel
set disable-randomization off

# Save command history in ~/.gdb_history
set history filename ~/.gdb_history
set history save

# vim:set ft=gdb:
